apiVersion: v1
kind: Namespace
metadata:
  name: cray
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: cray
spec:
  type: NodePort
  ports:
  - port: 3306
    name: mysql
    protocol: TCP
    nodePort: 30000
  - port: 33060
    name: xdevapi
    protocol: TCP
    nodePort: 30001
  selector:
    app: mysql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql
  namespace: cray
  labels:
    app: mysql
data:
  my.cnf: |
    [mysqld]
    default-authentication-plugin=mysql_native_password
---
apiVersion: v1
kind: Pod
metadata:
  name: mysql
  namespace: cray
  labels:
    app: mysql
spec:
  initContainers:
  - name: init-mysql
    image: mysql:8.0.12
    command:
    - bash
    - "-c"
    - |
      cp /mnt/config-map/my.cnf /mnt/conf.d/
    volumeMounts:
    - name: conf
      mountPath: /mnt/conf.d
    - name: config-map
      mountPath: /mnt/config-map
  containers:
  - name: mysql
    image: mysql:8.0.12
    env:
    - name: MYSQL_USER
      value: mysql
    - name: MYSQL_PASSWORD
      value: mysql
    - name: MYSQL_DATABASE
      value: cray
    - name: MYSQL_ROOT_PASSWORD
      value: supersecret
    ports:
    - containerPort: 3306
      name: mysql
    - containerPort: 33060
      name: xdevapi
    volumeMounts:
    - name: local
      mountPath: /var/lib/mysql
    - name: conf
      mountPath: /etc/mysql/conf.d
#    livenessProbe:
#      exec:
#        command: ["mysqladmin", "ping"]
#      initialDelaySeconds: 30
#      periodSeconds: 10
#      timeoutSeconds: 5
#    readinessProbe:
#      exec:
#        # Check we can execute queries over TCP (skip-networking is off).
#        command: ["mysql", "-u", "root", "-h", "127.0.0.1", "-e", "SELECT 1"]
#      initialDelaySeconds: 5
#      periodSeconds: 2
#      timeoutSeconds: 1
  volumes:
  - name: conf
    emptyDir: {}
  - name: local
    hostPath:
      # Change this to a local directory $LOCAL_DIR/data
#      path: /Users/{user}/Desktop/web/cray/cray-api/data
      type: Directory
  - name: config-map
    configMap:
      name: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: swagger
  namespace: cray
spec:
  type: NodePort
  ports:
  - port: 8080
    name: swagger-port
    protocol: TCP
    nodePort: 30002
  selector:
    app: swagger
---
apiVersion: v1
kind: Pod
metadata:
  name: swagger
  namespace: cray
  labels:
    app: swagger
spec:
  containers:
  - name: swagger
    image: swaggerapi/swagger-ui:v3.0.5
    env:
    - name: API_URL
      value: http://localhost:3000/api/
    ports:
    - containerPort: 8080
      name: swagger-port